// <auto-generated />
using System;
using AZMigrationPortal.Models.ContextClass;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AZMigrationPortal.Migrations
{
    [DbContext(typeof(MigrationContext))]
    partial class MigrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AZMigrationPortal.Models.ApplicationDetails", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("AppOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("BlackoutDuration")
                        .HasColumnType("time");

                    b.Property<int>("DatabaseId")
                        .HasColumnType("int");

                    b.Property<int>("PortDetailsPortId")
                        .HasColumnType("int");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationId");

                    b.HasIndex("DatabaseId");

                    b.HasIndex("PortDetailsPortId");

                    b.HasIndex("StorageId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.DatabaseInformation", b =>
                {
                    b.Property<int>("DatabaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DatabaseId"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("DatabaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatabaseId");

                    b.ToTable("Databases");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.PortDetails", b =>
                {
                    b.Property<int>("PortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortId"), 1L, 1);

                    b.Property<Guid>("PortNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.HasKey("PortId");

                    b.HasIndex("ServerId");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.ServerInformation", b =>
                {
                    b.Property<int>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServerId"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("IpAddress")
                        .HasColumnType("int");

                    b.Property<int>("PortId1")
                        .HasColumnType("int");

                    b.Property<int>("PortNumber")
                        .HasColumnType("int");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServerId");

                    b.HasIndex("PortId1");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.StorageInformation", b =>
                {
                    b.Property<int>("StorageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorageId"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("StorageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorageId");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.ApplicationDetails", b =>
                {
                    b.HasOne("AZMigrationPortal.Models.ServerInformation", "Servers")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AZMigrationPortal.Models.DatabaseInformation", "Database")
                        .WithMany("Applications")
                        .HasForeignKey("DatabaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AZMigrationPortal.Models.PortDetails", "PortDetails")
                        .WithMany("Applications")
                        .HasForeignKey("PortDetailsPortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AZMigrationPortal.Models.StorageInformation", "Storage")
                        .WithMany("Applications")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Database");

                    b.Navigation("PortDetails");

                    b.Navigation("Servers");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.PortDetails", b =>
                {
                    b.HasOne("AZMigrationPortal.Models.ServerInformation", "Server")
                        .WithMany("Ports")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.ServerInformation", b =>
                {
                    b.HasOne("AZMigrationPortal.Models.PortDetails", "PortId")
                        .WithMany("Servers")
                        .HasForeignKey("PortId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PortId");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.DatabaseInformation", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.PortDetails", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Servers");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.ServerInformation", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Ports");
                });

            modelBuilder.Entity("AZMigrationPortal.Models.StorageInformation", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
